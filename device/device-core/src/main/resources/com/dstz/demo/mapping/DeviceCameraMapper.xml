<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dstz.device.core.dao.DeviceCameraDao">
  <resultMap id="BaseResultMap" type="com.dstz.device.core.model.DeviceCamera">
    <id column="device_camera_id" jdbcType="VARCHAR" property="deviceCameraId" />
    <result column="device_basic_id" jdbcType="VARCHAR" property="deviceBasicId" />
    <result column="device_camera_shot_number" jdbcType="INTEGER" property="deviceCameraShotNumber" />
    <result column="device_camera_px" jdbcType="VARCHAR" property="deviceCameraPx" />
    <result column="device_camera_size" jdbcType="VARCHAR" property="deviceCameraSize" />
    <result column="device_camera_stream" jdbcType="VARCHAR" property="deviceCameraStream" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dstz.device.core.model.DeviceCamera">
    <result column="device_camera_remark" jdbcType="LONGVARCHAR" property="deviceCameraRemark" />
  </resultMap>
  <sql id="Base_Column_List">
    device_camera_id, device_basic_id, device_camera_shot_number, device_camera_px, device_camera_size,
    device_camera_stream
  </sql>
  <sql id="Blob_Column_List">
    device_camera_remark
  </sql>
  <select id="get" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device_camera
    where device_camera_id = #{deviceCameraId,jdbcType=VARCHAR}
  </select>

  <select id="getByDeviceBaiscId" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device_camera
    where device_basic_id = #{basicId,jdbcType=VARCHAR}
  </select>

  <insert id="create" parameterType="com.dstz.device.core.model.DeviceCamera">
      insert into device_camera (device_camera_id, device_basic_id, device_camera_shot_number,
      device_camera_px, device_camera_size, device_camera_stream,
      device_camera_remark)
    values (#{deviceCameraId,jdbcType=VARCHAR}, #{deviceBasicId,jdbcType=VARCHAR}, #{deviceCameraShotNumber,jdbcType=INTEGER},
      #{deviceCameraPx,jdbcType=VARCHAR}, #{deviceCameraSize,jdbcType=VARCHAR}, #{deviceCameraStream,jdbcType=VARCHAR},
      #{deviceCameraRemark,jdbcType=LONGVARCHAR})
  </insert>

  <update id="update" parameterType="com.dstz.device.core.model.DeviceCamera">
   update device_camera
    set device_basic_id = #{deviceBasicId,jdbcType=VARCHAR},
      device_camera_shot_number = #{deviceCameraShotNumber,jdbcType=INTEGER},
      device_camera_px = #{deviceCameraPx,jdbcType=VARCHAR},
      device_camera_size = #{deviceCameraSize,jdbcType=VARCHAR},
      device_camera_stream = #{deviceCameraStream,jdbcType=VARCHAR},
      device_camera_remark = #{deviceCameraRemark,jdbcType=LONGVARCHAR}
    where device_camera_id = #{deviceCameraId,jdbcType=VARCHAR}
  </update>

  <select id="query" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT  <include refid="Base_Column_List" /> FROM device_camera
    <where>
      <if test="whereSql!=null">
        ${whereSql}
      </if>
    </where>
    <if test="orderBySql!=null">
      ORDER BY ${orderBySql}
    </if>
    <if test="orderBySql==null">
      ORDER BY device_camera_id DESC
    </if>
  </select>

  <delete id="remove" parameterType="java.lang.String">
		DELETE FROM device_camera
		WHERE
		device_camera_id=#{id}
	</delete>
  <delete id="removeByBasicId" parameterType="java.lang.String">
		DELETE FROM device_camera
		WHERE
		device_basic_id = #{basicId,jdbcType=VARCHAR}
	</delete>
</mapper>